Test date: 06/13/16  24:04:09 
The number of times you used the grading program is 12 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
TABS Grading System Version 4.0
Student: Last=Singh                First=Siddharth            Type=Individual          
Grading and testing history log
       User Test.    Date: 06/13/16  15:48:23  tabin.1      testout      
       User Test.    Date: 06/13/16  16:08:02  tabin.1      testout      
       User Test.    Date: 06/13/16  16:52:23  tabin.1      testout      
       User Test.    Date: 06/13/16  16:57:44  tabin.1      testout      
       User Test.    Date: 06/13/16  16:59:56  tabin.1      testout      
       User Test.    Date: 06/13/16  17:02:11  tabin.1      testout      
       User Test.    Date: 06/13/16  17:07:47  tabin.1      testout      
       User Test.    Date: 06/13/16  17:08:23  tabin.2      testout      
       User Test.    Date: 06/13/16  17:17:58  tabin.1      testout      
       User Test.    Date: 06/13/16  17:19:11  tabin.1      testout      
       User Test.    Date: 06/13/16  17:19:14  tabin.2      testout      
       User Test.    Date: 06/13/16  17:19:18  tabin.3      testout      
       User Test.    Date: 06/13/16  17:19:21  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  17:20:16 
       User Test.    Date: 06/13/16  17:58:32  tabin.2      testout      
       User Test.    Date: 06/13/16  17:59:37  tabin.1      testout      
       User Test.    Date: 06/13/16  18:51:46  tabin.1      testout      
       User Test.    Date: 06/13/16  18:56:01  tabin.1      testout      
       User Test.    Date: 06/13/16  19:01:43  tabin.1      testout      
       User Test.    Date: 06/13/16  19:04:01  tabin.1      testout      
       User Test.    Date: 06/13/16  19:13:37  tabin.1      testout      
       User Test.    Date: 06/13/16  19:16:11  tabin.1      testout      
       User Test.    Date: 06/13/16  19:19:45  tabin.1      testout      
       User Test.    Date: 06/13/16  19:25:36  tabin.1      testout      
       User Test.    Date: 06/13/16  19:25:42  tabin.2      testout      
       User Test.    Date: 06/13/16  19:25:44  tabin.3      testout      
       User Test.    Date: 06/13/16  19:25:47  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  19:26:15 
       User Test.    Date: 06/13/16  19:36:16  tabin.1      testout      
       User Test.    Date: 06/13/16  19:36:25  tabin.2      testout      
       User Test.    Date: 06/13/16  19:36:31  tabin.3      testout      
       User Test.    Date: 06/13/16  19:36:36  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  19:36:41 
       User Test.    Date: 06/13/16  19:44:09  tabin.4      testout      
       User Test.    Date: 06/13/16  19:44:14  tabin.3      testout      
   *** Grading Run.  Date: 06/13/16  19:44:16 
       User Test.    Date: 06/13/16  20:01:28  tabin.3      testout      
       User Test.    Date: 06/13/16  20:01:34  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  20:01:37 
       User Test.    Date: 06/13/16  20:31:08  tabin.4      testout      
       User Test.    Date: 06/13/16  20:33:25  tabin.4      testout      
       User Test.    Date: 06/13/16  20:33:35  tabin.3      testout      
   *** Grading Run.  Date: 06/13/16  20:33:40 
       User Test.    Date: 06/13/16  20:40:59  tabin.3      testout      
       User Test.    Date: 06/13/16  20:41:04  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  20:41:13 
       User Test.    Date: 06/13/16  20:57:53  tabin.4      testout      
       User Test.    Date: 06/13/16  21:06:27  tabin.4      testout      
       User Test.    Date: 06/13/16  23:06:41  tabin.4      testout      
       User Test.    Date: 06/13/16  23:07:06  tabin.1      testout      
       User Test.    Date: 06/13/16  23:08:46  tabin.1      testout      
       User Test.    Date: 06/13/16  23:09:07  tabin.1      testout      
       User Test.    Date: 06/13/16  23:12:41  tabin.1      testout      
       User Test.    Date: 06/13/16  23:13:17  tabin.2      testout      
       User Test.    Date: 06/13/16  23:13:23  tabin.3      testout      
       User Test.    Date: 06/13/16  23:13:26  tabin.4      testout      
       User Test.    Date: 06/13/16  23:16:39  tabin.4      testout      
       User Test.    Date: 06/13/16  23:16:46  tabin.3      testout      
       User Test.    Date: 06/13/16  23:16:52  tabin.2      testout      
       User Test.    Date: 06/13/16  23:16:57  tabin.1      testout      
       User Test.    Date: 06/13/16  23:20:51  tabin.1      testout      
       User Test.    Date: 06/13/16  23:25:14  tabin.1      testout      
       User Test.    Date: 06/13/16  23:30:29  tabin.1      testout      
       User Test.    Date: 06/13/16  23:32:52  tabin.1      testout      
       User Test.    Date: 06/13/16  23:33:04  tabin.1      testout      
       User Test.    Date: 06/13/16  23:35:15  tabin.1      testout      
       User Test.    Date: 06/13/16  23:40:41  tabin.1      testout      
       User Test.    Date: 06/13/16  23:46:13  tabin.1      testout      
       User Test.    Date: 06/13/16  23:47:17  tabin.1      testout      
       User Test.    Date: 06/13/16  23:47:20  tabin.2      testout      
       User Test.    Date: 06/13/16  23:47:22  tabin.3      testout      
       User Test.    Date: 06/13/16  23:47:27  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  23:47:51 
       User Test.    Date: 06/13/16  23:51:56  tabin.4      testout      
       User Test.    Date: 06/13/16  23:51:58  tabin.2      testout      
       User Test.    Date: 06/13/16  23:52:04  tabin.1      testout      
       User Test.    Date: 06/13/16  23:52:06  tabin.3      testout      
   *** Grading Run.  Date: 06/13/16  23:52:18 
       User Test.    Date: 06/13/16  23:54:56  tabin.3      testout      
       User Test.    Date: 06/13/16  23:54:59  tabin.1      testout      
   *** Grading Run.  Date: 06/13/16  23:55:02 
       User Test.    Date: 06/13/16  23:58:11  tabin.1      testout      
       User Test.    Date: 06/13/16  23:58:15  tabin.2      testout      
   *** Grading Run.  Date: 06/13/16  23:58:17 
       User Test.    Date: 06/13/16  24:03:58  tabin.1      testout      
       User Test.    Date: 06/13/16  24:04:00  tabin.2      testout      
       User Test.    Date: 06/13/16  24:04:02  tabin.3      testout      
       User Test.    Date: 06/13/16  24:04:05  tabin.4      testout      
   *** Grading Run.  Date: 06/13/16  24:04:09 
   Running test 01   ...  tabs   gradin.1
   Running test 01A  ...  tabs 6 gradin.1
   Running test 01B  ...  tabs 1 gradin.1
   Running test 02   ...  tabs   gradin.2
   Running test 02A  ...  tabs 5 gradin.2
   Running test 02B  ...  tabs 2 gradin.2
   Running test 03   ...  tabs   gradin.3
   Running test 03A  ...  tabs 7 gradin.3
   Running test 03B  ...  tabs 3 gradin.3
   *** Passed all functional tests
++ Grade ++   60 = Points earned for correct answers.

-> We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
 00 -  30 = 20 points 
 31 -  32 = 15 points 
 33 -  34 = 10 points 
 35 -  36 =  5 points 
 37+      =  0 points 
Your actual counts are:
Lines .......  92    Comments ...  50    Labels .......   7   
Directives ..   5    Variables ..   0    Executables ..  30    McCabe ..   7 
++ Grade ++   20 = Points earned for code written efficiency.  

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0018 The program header format is adequate. 
DOCHB-0.67 Use of code block headers is adequate. 
DOCLC-1.00 Use of line comments is adequate. 
++ Grade ++   20 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++  100 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    77  = Number of user tests.                                  
    12  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC86&k~C6&juiC86&zuzC766&Zkyz&jgzk@&6<57957<&&8:@6:@6?&

Building the file tabs.ans for electronic submission...

;--------------------------------------------------------------------
;
;   TABS ***** MASM VERSION *****
;	
;	reads lines from an ASCII input text file which is redirected to the
;	standard input, performs some simple text editing on the lines, and writes the updated lines to an ASCII output text
;	file which is redirected from the standard output. The specific editing function is to expand tabs (replace tabs with
;	the correct number of spaces) to create columns.
;
;   To use, type this command:  tabs < in > out 
;
;   Owner: Siddharth Singh
;
;   Date			Reason
;   ----			------
;   06/13/2016		Original version
;---------------------------------------

;---------------------------------------
	.model    small		; 64k data and 64k code model
    .8086               ; only allow 8086 instructions
    .stack    256       ; stack size is 256 bytes
;---------------------------------------


		.code
;---------------------------------------
; No data segment
; initialize registers with tab stop number 
; and chars read since last tab
;---------------------------------------
start:											
;---------------------------------------
; Command line argument.
;---------------------------------------
     mov bl,10					; bl stores tab stop number, bh counts chars read since last tab
     cmp byte ptr es:[80h], 0	; access the CLP count 80h bytes into the extra segment
	 je whileLoop				; no parameter ... continue with the program
	 mov bl, byte ptr es:[82h]	; parameter entered ... load al with the CLP character
	 sub bl,30h					; substract 30h to get the tab stop number
;---------------------------------------
; while(c != EOF)
;---------------------------------------
whileLoop:				; While loop
	mov	ah,8			; read without echo a character
	int	21h				; how: set ah=8 and issue int 21h
	cmp al,09h			; checks if charater entered is tab
	jne print			; print non-tab characters
;---------------------------------------
; Print required number of spaces.
; loop to Print required number of spaces.
;---------------------------------------
printSpaceLoop:
	cmp bh,bl			; check if [charCount] is less than next tab stop number
	je resetCount		; start reading file again
	inc bh				; increment  
	mov	dl,' '			; write out a blank
    mov	ah,2			; set up to write the character
    int	21h				; how: set ah=2 and issue int 21h
    jmp	printSpaceLoop	; print more spaces
;---------------------------------------
; Increments char read since last tab
; resets if it exceeds tab stop number
;---------------------------------------   
 incrementCount:
	inc	bh				; increment
	cmp bh,bl			; check if [charCount] is less than next tab stop number
	jl whileLoop		; start reading file again
;---------------------------------------
; Reset character count for each row.
;---------------------------------------
resetCount:			 
	mov bh,0			; set character count to 0 for each row
	jmp whileLoop		; start reading file again	
;---------------------------------------
; Print characters of the input file.
;---------------------------------------
print:					; otherwise display to stdout
	mov	dl,al			; write out a blank
    mov	ah,2			; set up to write the character
    int	21h				; how: set ah=2 and issue int 21h
	cmp al,0Ah			; LF, reset char count to 0
	je resetCount		; reset char count to 0
	cmp al,1Ah          ; was the character an EOF
	jne	incrementCount	; keep reading the input fie
;---------------------------------------
; EOF so terminate.
;---------------------------------------
exit:					; terminate 
    mov	ax,4c00h        ; set correct exit code in ax
    int	21h             ; int 21h will terminate program
    end	start			; execution begins at the label start